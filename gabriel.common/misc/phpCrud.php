<?php
/*
 * IT Integrated Business Solutions (c) 2011
 * Database and Business Solution Experts
 * All rights reserved
 * Author: Ronan Cashell
 * Version: 1.01
 * http://www.it-iss.com
 * Come and have a look at some of our other great products!!
 *
 */
$u = "";$p = "";$d = "";$h = "localhost";$po = "3306";$t = "";foreach($argv as $key => $value){ if($key > 0) {if($key%2 == 1) { $command = $value;} else { switch($command) { case "-u": $u = $value; break; case "-p": $p = $value; break; case "-d": $d = $value; break; case "-h": $h = $value; break; case "-po": $po = $value; break; case "-t": $t = $value; break; default: break; }} }} if($u == "" || $d == "" || $h == "") { echo "Usage: " . $argv[0] . "\n"; echo "Mandatory fields\n"; echo "  The user must have admin privileges in order for this to work.\n  Please include spaces between the options and their values.\n"; echo "\t-u <username>\n"; echo "\t-d <database>\n"; echo "Optional fields\n"; echo "\t-h <hostname - default 'localhost'>\n"; echo "\t-p <password>\n"; echo "\t-po <port - default 3306>\n"; echo "\t-t <table name>\n"; die();} if(!function_exists("mysql_connect")) { echo "Usage: " . $argv[0] . "\n"; echo "  mysql_connect is a required component for this tool. You must install this before using this tool.\n"; die();} if($p == "") { $link = mysql_connect($h . ":" . $po, $u);} else { $link = mysql_connect($h . ":" . $po, $u, $p);}if(!$link) { die("phpCrud: Could not connect: " . mysql_error() . "\n");}if(!mysql_select_db($d, $link)) { die("phpCrud: Could not select db: " . mysql_error() . "\n");}$sql = "SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = '$d' AND TABLE_TYPE = 'BASE TABLE'";if($t != "") { $sql .= " AND TABLE_NAME = '$t'";}$result = mysql_query($sql);if(!$result) { die("phpCrud: tables: mysql_query: " . mysql_error() . "\n");}echo "DELIMITER GO\n";while($row = mysql_fetch_assoc($result)) {echo "--\n-- Table: " . $row['TABLE_NAME'] . "\n--\n"; $table = $row['TABLE_NAME'];$pk = "SELECT a.COLUMN_NAME, a.COLUMN_TYPE FROM information_schema.COLUMNS a, information_schema.KEY_COLUMN_USAGE b, information_schema.TABLE_CONSTRAINTS c "; $pk .= "WHERE c.CONSTRAINT_SCHEMA = '$d' AND c.TABLE_NAME = '$table' AND c.CONSTRAINT_TYPE = 'PRIMARY KEY' AND c.CONSTRAINT_SCHEMA = b.CONSTRAINT_SCHEMA "; $pk .= "AND c.TABLE_NAME = b.TABLE_NAME AND c.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = a.TABLE_SCHEMA AND b.TABLE_NAME = a.TABLE_NAME "; $pk .= "AND b.COLUMN_NAME = a.COLUMN_NAME ORDER BY b.ORDINAL_POSITION"; $pkcons = mysql_query($pk); if(!$pkcons) {die("phpCrud: pk: mysql_query: " . mysql_error() . "\n"); } $pka = array(); while($pkrow = mysql_fetch_assoc($pkcons)) {$pka[] = array($pkrow['COLUMN_NAME'], $pkrow['COLUMN_TYPE']); } if(empty($pka)) {echo "\n-- No primary key is defined for this table\n\n";continue; } mysql_free_result($pkcons);$colquery = "SELECT COLUMN_NAME, COLUMN_TYPE FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = '$d' AND TABLE_NAME = '$table' ORDER BY ORDINAL_POSITION"; $colres = mysql_query($colquery); if(!$colres) {die("phpCrud: cols: mysql_query: " . mysql_error() . "\n"); } $cols = array(); while($colrow = mysql_fetch_assoc($colres)) {$cols[] = array($colrow['COLUMN_NAME'], $colrow['COLUMN_TYPE']); }echo "\n\nCREATE PROCEDURE itiss_${table}_lst()\nBEGIN\n"; $last = count($cols) - 1; for($i=0; $i < count($cols); $i++) {switch($i) {case 0: echo "\tSELECT " . $cols[$i][0] . ",\n"; break;case $last: echo "\t       " . $cols[$i][0] . "\n\t  FROM $table;\n"; break;default: echo "\t       " . $cols[$i][0] . ",\n"; break;} } echo "END;\nGO\n";echo "\n\nCREATE PROCEDURE itiss_${table}_sel("; $last = count($pka)-1; if($last == 0) {echo "pk" . $pka[0][0] . " " . $pka[0][1]; } else {for($i=0; $i < count($pka); $i++) { switch($i) { case 0: echo "pk" . $pka[$i][0] . " " . $pka[$i][1] . ",\n"; break; case $last: echo "\tpk" . $pka[$i][0] . " " . $pka[$i][1]; break; default:echo "\tpk" . $pka[$i][0] . " " . $pka[$i][1] . ",\n"; break; }} } echo ")\nBEGIN\n"; $last = count($cols) - 1; for($i=0; $i < count($cols); $i++) {switch($i) {case 0: echo "\tSELECT " . $cols[$i][0] . ",\n"; break;case $last: echo "\t       " . $cols[$i][0] . "\n\t  FROM $table\n"; break;default: echo "\t       " . $cols[$i][0] . ",\n"; break;} } echo "\t WHERE "; $last = count($pka)-1; if($last == 0) {echo $pka[0][0] . " = pk" . $pka[0][0] . ";\n"; } else {for($i=0; $i < count($pka); $i++) { switch($i) { case 0: echo $pka[$i][0] . " = pk" . $pka[$i][0] . "\n"; break; case $last: echo "\t   AND " . $pka[$i][0] . " = pk" . $pka[$i][0] . ";\n"; break; default:echo "\t   AND " . $pka[$i][0] . " = pk" . $pka[$i][0] . "\n"; break; }} } echo "END;\nGO\n";echo "\n\nCREATE PROCEDURE itiss_${table}_upd("; $last = count($cols)-1; for($i=0; $i < count($cols); $i++) {switch($i) {case $last: echo "\tkv" . $cols[$i][0] . " " . $cols[$i][1]; break;case 0: echo "kv" . $cols[$i][0] . " " . $cols[$i][1] . ",\n"; break;default:echo "\tkv" . $cols[$i][0] . " " . $cols[$i][1] . ",\n"; break;} } echo ")\nBEGIN\n"; echo "\tDECLARE lcount INT;\n"; echo "\tSELECT count(1) INTO lcount\n\t  FROM $table\n\t WHERE "; $last = count($pka)-1; if($last == 0) {echo $pka[0][0] . " = kv" . $pka[0][0] . ";\n"; } else {for($i=0; $i < count($pka); $i++) { switch($i) { case $last: echo "\t   AND " . $pka[$i][0] . " = kv" . $pka[$i][0] . ";\n"; break; case 0: echo $pka[$i][0] . " = kv" . $pka[$i][0] . "\n"; break; default:echo "\t   AND " . $pka[$i][0] . " = kv" . $pka[$i][0] . "\n"; break; }} } echo "\tIF lcount = 0 THEN\n"; echo "\t\tINSERT INTO $table("; $last = count($cols) - 1; for($i=0; $i < count($cols); $i++) {switch($i) {case $last: echo "\t\t\t\t" . $cols[$i][0] . ")\n"; break;case 0: echo $cols[$i][0] . ",\n"; break;default: echo "\t\t\t\t" . $cols[$i][0] . ",\n"; break;} } echo "\t\tVALUES ("; $last = count($cols)-1; for($i=0; $i < count($cols); $i++) {switch($i) {case $last: echo "\t\t\t\tkv" . $cols[$i][0]; break;case 0: echo "kv" . $cols[$i][0] . ",\n"; break;default:echo "\t\t\t\tkv" . $cols[$i][0] . ",\n"; break;} } echo ");\n"; echo "\tELSE\n"; echo "\t\tUPDATE $table\n\t\tSET "; $last = count($cols)-1; for($i=0; $i < count($cols); $i++) {switch($i) {case $last: echo "\t\t\t" . $cols[$i][0] . " = kv" . $cols[$i][0]; break;case 0: echo $cols[$i][0] . " = kv" . $cols[$i][0] . ",\n"; break;default:echo "\t\t\t" . $cols[$i][0] . " = kv" . $cols[$i][0] . ",\n"; break;} } echo "\n\t\tWHERE "; $last = count($pka)-1; if($last == 0) {echo $pka[0][0] . " = kv" . $pka[0][0]; } else {for($i=0; $i < count($pka); $i++) { switch($i) { case $last: echo "\t\t\t  AND " . $pka[$i][0] . " = kv" . $pka[$i][0]; break; case 0: echo $pka[$i][0] . " = kv" . $pka[$i][0] . "\n"; break; default:echo "\t\t\t  AND " . $pka[$i][0] . " = kv" . $pka[$i][0] . "\n"; break; }} } echo ";\n"; echo "\tEND IF;\n"; echo "END;\nGO\n";echo "\n\nCREATE PROCEDURE itiss_${table}_del("; $last = count($pka)-1; if($last == 0) {echo "pk" . $pka[0][0] . " " . $pka[0][1]; } else {for($i=0; $i < count($pka); $i++) { switch($i) { case 0: echo "pk" . $pka[$i][0] . " " . $pka[$i][1] . ",\n"; break; case $last: echo "\tpk" . $pka[$i][0] . " " . $pka[$i][1]; break; default:echo "\tpk" . $pka[$i][0] . " " . $pka[$i][1] . ",\n"; break; }} } echo ")\nBEGIN\n"; echo "\tDELETE FROM $table\n\t WHERE "; $last = count($pka)-1; if($last == 0) {echo $pka[0][0] . " = pk" . $pka[0][0] . ";\n"; } else {for($i=0; $i < count($pka); $i++) { switch($i) { case 0: echo $pka[$i][0] . " = pk" . $pka[$i][0] . "\n"; break; case $last: echo "\t   AND " . $pka[$i][0] . " = pk" . $pka[$i][0] . ";\n"; break; default:echo "\t   AND " . $pka[$i][0] . " = pk" . $pka[$i][0] . "\n"; break; }} } echo "END;\nGO\n";}mysql_free_result($result);echo "DELIMITER ;\n"; mysql_close($link);
?>
